---
title: "Descarga de variables climaticas desde Google Earth Engine"
editor_options: 
  chunk_output_type: console
---

```{r, echo=FALSE, warning=F, message=FALSE}
#install.packages('geojsonio')
library(tidyverse)
library(ggplot2)
library(sf)
library(lubridate)
library(tmap)
library(rgee)
```

## Preprocesamiento

```{r}
df <- readxl::read_xlsx('datos/Datos.a.usar.xlsx')
df$Lat <- df$Lat *-1 ## multiplicamos por -1
df$Long <- df$Long *-1
```


## Trabajamos con las variables temporales

Convertimos la columna con las fechas del periodo crítico y le restamos 30 días para ampliar la ventana de descarga de las variables climáticas

```{r}
df$fechacorta <- as.Date(df$fechacorta) - days(30)
```

## Trabajamos con las variables espaciales

Convertimos el `dataframe` a un objeto espacial cuya estructura es similar al `dataframe` pero con una columna que hace referencia a las coordenadas espaciales.

```{r}
## vamos a utlizar la libreria sf
df_sf <- st_as_sf(df,
                  coords = c('Long','Lat'),
                  crs=4326)

```

Chequeamos que los puntos pertenecen a los lugares que deberían

```{r message=FALSE}
tmap_mode('view')
tm_shape(df_sf) +
  tm_dots()
```

Generamos un polígono para delimitar el área de descarga de los datos

```{r}
poligono <-  st_convex_hull(st_buffer(st_combine(df_sf),
                                      units::as_units(4000,'m')))
tm_shape(poligono) +
  tm_polygons(alpha = 0)  +
  tm_shape(df_sf) +
  tm_dots()
```

Inicializamos GEE, transformamos el poligono sf a un objeto earth engine y estamos listos para comenzar la descarga!


```{r}
ee_Initialize()
poligono_ee <- sf_as_ee(poligono)
```

## Descarga de los datos

Llamamos las funciones de descarga

```{r}
source('src/cambio_de_unidades2.R') ## funcion que nos permite pasar de kelvins a Celsius
source('src/XClimVar2.R') # Contie la fucion de descarga 

```

La función de descarga necesita :

-   dataframe con la columna geom, es decir haberlo transformado a un dataframe sf.

-   la columna tiempo, contiene las fechas estas pueden estar en string, no necesariamente en type date.

-   pol , es el polígono generado con los puntos que se encuentran en el dataset. poigon_ee.

-   climaticvar , recibe como input un vector con las variables a descargar estas pueden ser :

c('pp_sum','pp_mean','t_mean','t_sum','te_mean','te_sum','dp','wind','hr') mientras mayor sea el numero de variables mas tiempo tomara la extracción

Estas tres variables reciben como input TRUE por default son FALSE, esto es para calcular los tiempos en días ,meses o años.

-   Daily(boolean)

-   Monthly(boolean)

-   Yearly(boolean)

-   p_length: es el largo del periodo total para la descarga de variables(numérica)

-   step: es cada cuanto se toma las variables(numérica)

### 

```{r, eval=FALSE}
df_climatic <- XClimVar(df_sf,
                        df_sf$fechacorta,
                        pol = poligono_ee,
                        climaticvar = c( 'pp_sum','t_mean','te_sum','dp','wind','hr'),
                        Daily = T,
                        p_length=90,
                        step=10)
head(df_climatic)

df_climatic <- cbind(st_coordinates(df_climatic),
                     st_drop_geometry(df_climatic))

write.csv(df_climatic, "datos/datos_climaticos_p90_s10_GRSV.csv",
          row.names = F,
          sep = ',')
```
