[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Modelos estadísticos basados en aprendizaje automático para predecir enfermedades en cultivos agrícolas usando variables climáticas de productos satelitales",
    "section": "",
    "text": "Introducción\nEn la era de la información, el acceso a datos satelitales de alta resolución espacial y temporal ha revolucionado la forma en que comprendemos y gestionamos nuestro entorno. La constante evolución de la tecnología espacial ha permitido que una gran cantidad de información sea capturada desde el espacio, ofreciendo una perspectiva sin precedentes de nuestro planeta. La disponibilidad de datos satelitales de alta calidad se ha convertido en una herramienta fundamental para una amplia gama de aplicaciones, desde la monitorización ambiental y la gestión de desastres hasta la planificación urbana y la agricultura de precisión.\nAdemás, la capacidad de cómputo disponible en la actualidad ha abierto nuevas posibilidades en el análisis de datos satelitales. Esta alta capacidad de computo nos permite procesar grandes volúmenes de información, podemos obtener información más detallada y actualizada. Esto ha impulsado avances significativos en la predicción de fenómenos naturales, la gestión y planificación de recursos naturales.\nA lo largo de este análisis, exploraremos en detalle el acceso y la descarga de datos climáticos disponibles en la plataforma Google Earth Engine mediante su conexión con r. Abordaremos ademas algunas técnicas de selección de variables para la construcción de modelos predictivos y el posterior ajuste de los mismos.\n\n\nContenidos\n1.Tutorial para instalar el paquete “rgee”.\n2. Descarga de variables climaticas.\n3. Metodos Seleccion de Variables.\n4. Ajuste de Modelos Predictivos."
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "About this site\n\n1 + 1\n\n[1] 2"
  },
  {
    "objectID": "instalacion.html",
    "href": "instalacion.html",
    "title": "Instrucciónes para instalar “rgee”",
    "section": "",
    "text": "Previamente a instalar rgee:\n\ntener instalado Python con la libreria GEE.\n\n\nTener creada una cuenta en Google Earth Engine.\n\nAbrir Rstudio e instalar los paquetes necesarios\n\ninstall.packages('sf')\ninstall.packages('reticulate')\ninstall.packages('remotes')\n\nInstalar rgee utilizando el paqute reomotes\n\nlibrary('reticulate')\nremotes::install_github('r-spatial/rgee')\nlibrary(rgee)\n\nUtilizar la funcion py_dicover_config() para ver la version de python que utiliza\n\npy_discover_config()\n\nVerificar la dirección de Python\n\nimport('sys')$executable\n\ncrea un ambiente isolado de Python con todas las dependencias\n\nee_install()\n\nAqui, luego de un rato , nos va a pedir que aceptemos los cambios escribimos: Y, en la consola y le damos aceptar. Luego de que se haya instalado, reiniciar la computadora.\nUna vez reiniciada establecemos el directorio al ambiente de rgee en la computadora\n\nreticulate::use_python('direccion del ambiente de Python a utlizar', required = TRUE)\nreticulate::py_config()\n\nCargamos el paquete rgee\n\nlibrary(rgee)\n\nInicializamos el google earth engine, cuando inicializamos por primera vez R nos pedira abrir una ventana del navegador para pedirnos que nos autentiquemos con nuetras credenciales de google earth engine. Rellenamos y le damos a next, una vez logeados nos dara una contraseña, la cual debemos copiarla y pegarla en la consola que nos estara pidiendo como enter earth egnine authenticaiton\n\nee_Initialize()\n\nVerificamos si esta todo correcto corriendo la siguente linea\n\nee$String('Autenticado correctametne desde EE')$getInfo()\n\nSi aparece un error con Cloud SKD este video podria ser de ayuda."
  },
  {
    "objectID": "descarga.html",
    "href": "descarga.html",
    "title": "Descarga de variables climaticas desde Google Earth Engine",
    "section": "",
    "text": "acacasdvasvavasf"
  },
  {
    "objectID": "Seleccion de variables.html",
    "href": "Seleccion de variables.html",
    "title": "Selección de Variables",
    "section": "",
    "text": "El proceso de selección de variables es una etapa fundamental en el ajuste de modelos estadísticos y aprendizaje automático\nAlgunas de las razones por las cuales es una etapa importante al momento de generar modelos son:\n\n\n\nPodría mejorar de la precisión del modelo: Al eliminar variables irrelevantes o ruido, el modelado puede centrarse en las relaciones más importantes en los datos.\nReducción de la complejidad del modelo: Demasiadas variables en un modelo puede llevar a un sobreajuste (overfitting), y a un modelo que no generaliza bien a nuevos datos. Ademas, siempre prima el principio de la “Parsimonia”, es decir que entre varias explicaciones posibles para un fenómeno, la más simple es la preferida.\nAhorro de recursos: Al eliminar variables innecesarias, se reducen los recursos computacionales y el tiempo necesario para entrenar y aplicar el modelo.\nInterpretabilidad: En muchos casos, tener un modelo con un conjunto más pequeño de variables facilita la interpretación de los resultados. Un modelo más sencillo y interpretable puede ser más útil en situaciones donde es importante comprender las relaciones entre los datos.\nEvitar multicolinealidad: La multicolinealidad es una situación en la que dos o más variables independientes están altamente correlacionadas entre sí. Esto puede afectar la estabilidad de los coeficientes estimados.\n\n\n\nExisten diferentes técnicas para la selección de variables, que van desde métodos estadísticos simples como la correlación y las pruebas de hipótesis, hasta métodos más avanzados como la eliminación recursiva de características, la selección basada en modelos y el uso de algoritmos de aprendizaje automático especializados. La elección de la técnica adecuada depende del problema específico y de los datos disponibles.\nEn este tutorial abordaremos el método de selección conocido como BORUTA.\nEste es un algoritmo de tipo wraper, el cual se basa en Random Forest, pero es capas de trabajar otros métodos de clasificación que pueda aplicar medidas de importancia a las variables. El funcionamiento de Boruta, se basa en crear, un numero determinado, de copias aleatorias de las variables originales a las cuales denomina VARIABLES SOMBRAS. El paso siguiente es ajustar un modelo de clasificación (RF) en la base extendida y aplica una medida de importancia a las variables, el valor por defecto es Precisión de disminución media. En cada interación que realiza el algoritmo verifica si una variable tiene mayor importancia que la mejor de las variables sombras y elimina a las que se consideran poco importantes, el algoritmo se detiene cuando todas las variables son clasificadas o cuando se alcanzo el limite de iteraciones.\n\n\nEjemplo\n\nCargamos la base de datos y visualizamos las primeras observaciones\n\ndatos &lt;- read.table(\"datos/datos_con_variables.txt\", \n                    sep = '\\t',\n                    header = T) \n\nknitr::kable(head(datos))\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nPrevalencia\nHumedad.relativa__mean\nTemperatura__mean\nViento__mean\nHumedad.relativa__mean.1\nTemperatura__mean.1\nViento__mean.1\nHumedad.relativa__mean.2\nTemperatura__mean.2\nViento__mean.2\nHumedad.relativa__mean.3\nTemperatura__mean.3\nViento__mean.3\nHumedad.relativa__mean.4\nTemperatura__mean.4\nViento__mean.4\nHumedad.relativa__mean.5\nTemperatura__mean.5\nViento__mean.5\nHumedad.relativa__mean.6\nTemperatura__mean.6\nViento__mean.6\nPrecipitacion__sum\nPrecipitacion__sum.1\nPrecipitacion__sum.2\nPrecipitacion__sum.3\nPrecipitacion__sum.4\nPrecipitacion__sum.5\nPrecipitacion__sum.6\n\n\n\n\n0\n58.65184\n21.05951\n6.536072\n73.22678\n19.90634\n9.780156\n72.67092\n20.71141\n6.466785\n64.03660\n22.97660\n7.916849\n75.99637\n21.51145\n7.020278\n75.77313\n22.40572\n7.760121\n79.29131\n23.34874\n8.997708\n6.2644990\n52.54484\n12.932652\n19.118889\n80.13569\n50.47264\n38.286738\n\n\n1\n59.67524\n24.46849\n6.702849\n66.70818\n24.94335\n7.635650\n68.78530\n23.51057\n9.631544\n67.10277\n26.44745\n9.499776\n74.89278\n24.31033\n8.607911\n68.22090\n24.39755\n6.674912\n62.14418\n23.93746\n10.163059\n20.3364016\n105.17546\n64.320585\n3.535999\n22.14435\n20.76716\n2.537423\n\n\n1\n75.47817\n23.30672\n11.707318\n69.85874\n22.88500\n7.769156\n66.82683\n23.60491\n11.975915\n78.75421\n22.81766\n7.818832\n71.46102\n24.41368\n8.539023\n72.08580\n21.74483\n10.505125\n71.91121\n20.34524\n9.793524\n26.9517159\n48.62536\n17.755662\n32.035279\n37.93023\n19.26437\n78.698928\n\n\n0\n65.99709\n23.05622\n9.307053\n66.27932\n22.40829\n9.362457\n62.79052\n21.13734\n8.522566\n70.15856\n22.37431\n12.823023\n77.18495\n20.60607\n6.630790\n73.42364\n20.76016\n8.531939\n70.80800\n20.49397\n8.744157\n18.4075691\n22.98957\n3.385268\n48.107706\n68.55392\n7.42406\n28.630395\n\n\n0\n70.11420\n22.39059\n6.448977\n70.79766\n21.60553\n7.183501\n70.04556\n19.77124\n4.253317\n76.69221\n21.63286\n10.644872\n82.05886\n19.98714\n6.305642\n77.69285\n20.29679\n7.255828\n77.95222\n19.49357\n7.388338\n19.6349480\n27.63106\n4.532583\n56.677051\n67.23344\n10.67485\n58.521126\n\n\n1\n50.92852\n29.47624\n9.801433\n56.89608\n24.52350\n9.467954\n58.88033\n22.84715\n9.601097\n74.53553\n24.08409\n9.087414\n69.11722\n23.92654\n8.830854\n67.63569\n21.76168\n7.618265\n61.74270\n25.97394\n8.762171\n0.5013355\n59.24095\n11.846221\n26.216908\n18.96441\n18.85320\n9.951881\n\n\n\n\n\nEsta base de datos que contiene 105 observaciones y 29 variables climáticas.\nPara la selección de variables vamos a utilizar el paquete “Boruta”.\n\n#install.packages(\"Boruta\") \nlibrary(Boruta)\n\n## Warning: package 'Boruta' was built under R version 4.1.3\n\n# Establecemos una semilla de aleatoriedad para garantizar la reproducibilidad\n# de este script.\n\nset.seed(123)\n\n# Ahora empezamos la selección \nseleccion &lt;- Boruta(Prevalencia ~ ., # Establecemos nuestra variable Respuesta, \n                    data = datos, \n                    doTrace = 0,# Establece el nivel de siguimiento.\n                    maxRuns = 400)\n\nseleccion\n\n## Boruta performed 399 iterations in 8.525803 secs.\n##  3 attributes confirmed important: Viento__mean, Viento__mean.1,\n## Viento__mean.3;\n##  22 attributes confirmed unimportant: Humedad.relativa__mean,\n## Humedad.relativa__mean.1, Humedad.relativa__mean.2,\n## Humedad.relativa__mean.3, Humedad.relativa__mean.4 and 17 more;\n##  3 tentative attributes left: Humedad.relativa__mean.6,\n## Precipitacion__sum, Temperatura__mean.4;\n\n\nPodemos ver de forma gráfica los resultados:\n\nplot(seleccion,cex.axis=.5,las=2, xlab=\"\")\n\n\n\n\nVemos cual fue el valor de la media, mediana, mín. y máx. de importancia para cada variable y la decisión que tomo el algoritmo:\n\nnivel_importancia &lt;- as.data.frame(attStats(seleccion))\n#Ordenamos de mayor a menor segun la importancia media\nimportancia &lt;- nivel_importancia[with(nivel_importancia,\n                                  order(-nivel_importancia$meanImp)),] \nknitr::kable(importancia)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nmeanImp\nmedianImp\nminImp\nmaxImp\nnormHits\ndecision\n\n\n\n\nViento__mean.1\n8.7744376\n8.7930455\n4.8998282\n12.7765880\n0.9749373\nConfirmed\n\n\nViento__mean.3\n4.3647810\n4.3170769\n0.5440153\n8.7849181\n0.7092732\nConfirmed\n\n\nViento__mean\n3.7919869\n3.7963800\n-0.3178751\n7.7750945\n0.6390977\nConfirmed\n\n\nHumedad.relativa__mean.6\n3.3212797\n3.3635189\n-0.0971896\n6.1879222\n0.5839599\nTentative\n\n\nTemperatura__mean.4\n2.8662426\n2.8623287\n-0.7914076\n6.8322724\n0.4736842\nTentative\n\n\nPrecipitacion__sum\n2.7209341\n2.7179320\n-0.2301187\n5.8073459\n0.4686717\nTentative\n\n\nViento__mean.5\n2.6461833\n2.6410148\n-0.3083531\n5.3559630\n0.2656642\nRejected\n\n\nHumedad.relativa__mean.1\n2.5907449\n2.6044638\n-0.0044658\n5.2558146\n0.2506266\nRejected\n\n\nPrecipitacion__sum.1\n2.5277664\n2.4945687\n-0.9231602\n6.8662029\n0.2130326\nRejected\n\n\nViento__mean.4\n0.9636597\n1.0917971\n-1.1627519\n2.6365677\n0.0025063\nRejected\n\n\nPrecipitacion__sum.5\n0.9365234\n0.6768509\n-0.7985304\n3.3406764\n0.0025063\nRejected\n\n\nHumedad.relativa__mean.4\n0.9107913\n0.9500093\n-0.8450650\n3.2010794\n0.0050125\nRejected\n\n\nPrecipitacion__sum.2\n0.8961598\n0.6161133\n-0.9596143\n5.3117622\n0.0050125\nRejected\n\n\nHumedad.relativa__mean.3\n0.8685379\n1.0799136\n-1.4744606\n3.3515707\n0.0075188\nRejected\n\n\nHumedad.relativa__mean\n0.7775711\n0.9012670\n-1.1236848\n2.3616586\n0.0025063\nRejected\n\n\nTemperatura__mean.2\n0.5859421\n0.5442475\n-1.6293715\n2.4933502\n0.0025063\nRejected\n\n\nTemperatura__mean\n0.5670637\n0.2847687\n-0.6468207\n2.6094383\n0.0025063\nRejected\n\n\nPrecipitacion__sum.3\n0.5371041\n0.6028427\n-1.6094188\n3.3939298\n0.0050125\nRejected\n\n\nTemperatura__mean.6\n0.0896217\n0.3066048\n-1.4134312\n1.5721311\n0.0000000\nRejected\n\n\nPrecipitacion__sum.4\n-0.0110020\n0.1393441\n-1.4347820\n2.6868084\n0.0025063\nRejected\n\n\nHumedad.relativa__mean.2\n-0.0142062\n-0.2522466\n-1.4413259\n2.6032661\n0.0000000\nRejected\n\n\nTemperatura__mean.1\n-0.1227383\n0.0450098\n-2.2650233\n1.5197291\n0.0000000\nRejected\n\n\nTemperatura__mean.5\n-0.2163498\n-0.5847299\n-1.7525981\n1.8029840\n0.0025063\nRejected\n\n\nTemperatura__mean.3\n-0.3978331\n-0.3222594\n-1.3584858\n0.5269951\n0.0000000\nRejected\n\n\nViento__mean.6\n-0.4373940\n-0.5863042\n-2.3023930\n1.6763032\n0.0000000\nRejected\n\n\nViento__mean.2\n-0.5011459\n-0.4730653\n-2.5216707\n2.4981332\n0.0025063\nRejected\n\n\nHumedad.relativa__mean.5\n-0.7985273\n-1.0072392\n-2.2219389\n2.1563556\n0.0000000\nRejected\n\n\nPrecipitacion__sum.6\n-1.0445622\n-0.7773018\n-2.7763007\n0.7030396\n0.0000000\nRejected\n\n\n\n\n\nPodemos ver que el algoritmo selecciono tres variables como importantes, tres como tentativas y 22 como no importantes.\nNos quedamos con las variables seleccionadas:\n\nvariables_selec &lt;- names(seleccion$finalDecision[seleccion$finalDecision %in%\n                                                   \"Confirmed\"])\n\n\ncat(variables_selec, sep = ',')\n\n## Viento__mean,Viento__mean.1,Viento__mean.3"
  }
]